const marker=()=>Math.random().toString(36).slice(2).padStart(10,"0");String.prototype.html=function(){return(new DOMParser).parseFromString(this,"text/html").body.firstChild},String.prototype.svg=function(){return(new DOMParser).parseFromString(this,"image/svg+xml").documentElement};class Parser{constructor(e,...t){this.values_map=[],this.string=this.concat_string(e,t)}concat_string(e,t){return e.map((e,r)=>{const n=t[r],a=marker();switch(!0){case"function"==typeof n:e=e.concat(`"" data-${a}=""`),this.values_map.push({id:a,value:n});break;case"object"==typeof n||n&&1===n.nodeType:e=`${e} <template data-${a}=""></template>`,this.values_map.push({id:a,value:n});break;case"string"==typeof n:e=`${e}${n||""}`}return e}).reduce((e,t)=>e+t)}get fragment(){const e=document.createElement("template");return e.innerHTML=this.string,this.place_values(e.content.cloneNode(!0))}get container(){return this.place_values(this.string.html())}get svg(){const e=this.container;return e.setAttribute("xmlns","http://www.w3.org/2000/svg"),this.place_values(e.outerHTML.svg())}place_values(e){return this.values_map.forEach(t=>{const r=e.outerHTML?e.parentNode.querySelector(`[data-${t.id}]`):e.querySelector(`[data-${t.id}]`);if("function"==typeof t.value){const e=/(on)\w+/g.exec(r.outerHTML)[0].split("on")[1];r.addEventListener(e,t.value),r.removeAttribute(`on${e}`),r.removeAttribute(`data-${t.id}`)}else if("object"==typeof t.value){if(!t.value)return null;if(t.value.children)r.replaceWith(t.value);else{const e=document.createDocumentFragment();t.value.forEach(t=>e.append(t instanceof HTMLElement?t:HTML`${t}`)),r.replaceWith(e)}}}),e}}function HTML(e,...t){return new Parser(e,...t).container}function FRAGMENT(e,...t){return new Parser(e,...t).fragment}function SVG(e,...t){return new Parser(e,...t).svg}export{HTML,FRAGMENT,SVG};
